#define function switchTest(uint256) pure returns(uint256)

#define jumptable SWITCH_TABLE {
    jump_one jump_two jump_three jump_four
}

// jump tables are switch cases, like in assembly
#define macro SWITCH_TEST() = takes(0) returns(0) {
    // put jumpt table into memory at 0x00
    __tablesize(SWITCH_TABLE)   // [table_size]
    __tablestart(SWITCH_TABLE)  // [table_start, table_size]
    0x00
    codecopy

    0x04 calldataload   // [input_num]
    
    // revert if num is not between 0 && 3
    dup1
    0x03 lt
    err jumpi

    0x20 mul 
    mload
    jump

    jump_one:
        0x100 0x00 return
        0x20 0x00 return
    jump_two:
        0x200 0x00 mstore
        0x20 0x00 return
    jump_three:
        0x300 0x00 mstore
        0x20 0x00 return
    jump_four:
        0x400 0x00 mstore
        0x20 0x00 return
    err:
        0x00 0x00 revert
}

#define macro MAIN() = takes(0) returns(0) {
    // ID which function is being called
    0x00 calldataload 0xE0 shr
    dup1 __FUNC_SIG(switchTest) eq switch_test jumpi

    // revert if function is not found
    0x00 0x00 revert // []

    switch_test:
        SWITCH_TEST()
}


#define table CODE_TABLE {
    0x60e58060093d393df360003560e01c80634ac58872146100165760006000fd5b60806100656000396004358060031061005f5760200251565b6101006000f360206000f35b61020060005260206000f35b61030060005260206000f35b61040060005260206000f35b60006000fd000000000000000000000000000000000000000000000000000000000000002f0000000000000
}